Changes since ldep_1_0_beta:
 - detect and reject multiple strong definitions.
 - encode symbol type in reference rather than symbol itself
 - encode symbol size in reference rather than symbol itself
 - removed 'multiuse' from XrefRec. Now holds explicit 'next',
   'size', 'xtype' fields.
 - introduced macros to test symbol type
Changes since SSRL_APPS_rtems_4_9_20080922:
 - detection of multiply defined symbols accepts multiple weak definitions;
   only complains when multiple strong definitions are encountered.
 - handle '-U' option differently (previous implementation possibly
   emitted multiple symbol table entries into file generated by -C).
   It is both easier and more consistent to simply process the undefined
   linkset to emit symbol table entries for undefined symbols.
 - handle weak undefined symbols ('w'); addition of a strong undef ('U')
   overrides a weak undef. Weak undefined symbols are ignored when
   writing a linker script. When creating a 'builtin symboltable' source
   file then weak undefs are emitted as NULL void pointers.
 - BUGFIX: overriding existing symbol type was broken when adding
   support for weak symbols. A helper routine was added rating
   symbols according to their 'significance' (undef < weak < strong)
   and the type is now only overriden if the significance of the
   new symbol is greater than the significance of the existing definition.
 - added -v option to print version info (CVS tag + Id)
 - weak symbols hopefully work now: when detecting multiple
   symbol definitions allow new strong definition to override
   the symbol type introduced by the old weak def.
   (The xref to the old definition still bears the WEAK flag).
   No 'type mismatch' warning is emitted if either the old
   or new definition is weak.
 - BUGFIX: string argument to log message printing main
   symbol name (-Aman_sym) was missing.
 - '-U' option added. Assume all undefined symbols in
   the application link-set will ultimately be provided by
   start files, linker script etc.
 - ChangeLog added
